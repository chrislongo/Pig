<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>pig</string>
		<string>pig.substituted</string>
	</array>
	<key>name</key>
	<string>Pig</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(--).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-dash.asciidoc</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:ASSERT|LOAD|STORE|DUMP|FILTER|DISTINCT|FOREACH|GENERATE|STREAM|JOIN|COGROUP|GROUP|CROSS|ORDER|LIMIT|UNION|SPLIT|DESCRIBE|EXPLAIN|ILLUSTRATE|AS|BY|INTO|USING|LIMIT|PARALLEL|OUTER|INNER|DEFAULT|LEFT|SAMPLE|RANK|CUBE|ALL|KILL|QUIT|MAPREDUCE|ASC|DESC|THROUGH|SHIP|CACHE|DECLARE|CASE|WHEN|THEN|END|IN|PARTITION|FULL|IMPORT|IF|ONSCHEMA|INPUT|OUTPUT)\b</string>
			<key>name</key>
			<string>keyword.control.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:int|long|float|double|chararray|bytearray|boolean|datetime|biginteger|bigdecimal|tuple|bag|map)\b</string>
			<key>name</key>
			<string>storage.datatypes.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(PigStorage|BinStorage|BinaryStorage|PigDump|HBaseStorage|JsonLoader|JsonStorage|AvroStorage|TextLoader|PigStreaming|TrevniStorage)\b</string>
			<key>name</key>
			<string>support.function.storage.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(DIFF|TOBAG|TOMAP|TOP|TOTUPLE|RANDOM|FLATTEN|CUBE|ROLLUP|IsEmpty|ARITY|PluckTuple|SUBTRACT)\b</string>
			<key>name</key>
			<string>support.function.udf.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(ABS|ACOS|ASIN|ATAN|CBRT|CEIL|COS|COSH|EXP|FLOOR|LOG|LOG10|ROUND|SIN|SINH|SQRT|TAN|TANH|AVG|COUNT|COUNT_STAR|MAX|MIN|SUM|COR|COV)\b</string>
			<key>name</key>
			<string>support.function.udf.math.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(CONCAT|INDEXOF|LAST_INDEX_OF|LCFIRST|LOWER|REGEX_EXTRACT|REGEX_EXTRACT_ALL|REPLACE|SIZE|STRSPLIT|SUBSTRING|TOKENIZE|TRIM|UCFIRST|UPPER|LTRIM|RTRIM|ENDSWITH|STARTSWITH|TRIM)\b</string>
			<key>name</key>
			<string>support.function.udf.string.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(AddDuration|CurrentTime|DaysBetween|GetDay|GetHour|GetMilliSecond|GetMinute|GetMonth|GetSecond|GetWeek|GetWeekYear|GetYear|HoursBetween|MilliSecondsBetween|MinutesBetween|MonthsBetween|SecondsBetween|SubtractDuration|ToDate|WeeksBetween|YearsBetween|ToMilliSeconds|ToString|ToUnixTime)\b</string>
			<key>name</key>
			<string>support.function.udf.datetime.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(cat|cd|copyFromLocal|copyToLocal|cp|ls|mkdir|mv|pwd|rm)\b</string>
			<key>name</key>
			<string>support.function.command.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\$[a_zA-Z0-9_]+</string>
			<key>name</key>
			<string>variable.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)\b(NULL|true|false|stdin|stdout|stderr)\b</string>
			<key>name</key>
			<string>constant.language.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b\d+(\.\d+)?\b</string>
			<key>name</key>
			<string>constant.numeric.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i)!=|==|&lt;|&gt;|&lt;=|&gt;=|(?:\b(?:MATCHES|IS|OR|AND|NOT)\b)</string>
			<key>name</key>
			<string>keyword.operator.comparison.pig</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(\+|\-|\*|\/|\%|\?|:|::|\.\.|#)</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.pig</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.pig</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.pig</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.pig</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\.</string>
					<key>name</key>
					<string>constant.character.escape.pig</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.variable.pig</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i)^\s*([a-z_][a-z0-9_]*)\s*(?:=)</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?i)^\s*(set)\s+(\S+)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.parameter.pig</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.parameter.pig</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?i)\s*(DEFINE|DECLARE|REGISTER)\s+(\S+)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.alias.pig</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>storage.type.alias.pig</string>
				</dict>
			</dict>
			<key>end</key>
			<string>;?$</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.pig</string>
	<key>uuid</key>
	<string>6B102D86-1EB7-4729-94E5-8EE7D3D6F82B</string>
</dict>
</plist>
